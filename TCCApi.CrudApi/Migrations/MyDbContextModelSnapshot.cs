// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using MySql.Data.EntityFrameworkCore.Storage.Internal;
using System;
using TCCApi.CrudApi.Dados;

namespace TCCApi.CrudApi.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("TCCApi.CrudApi.Models.DTO.ClienteDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CPF")
                        .HasMaxLength(11);

                    b.Property<string>("Celular");

                    b.Property<string>("Email")
                        .HasMaxLength(255);

                    b.Property<string>("Guid");

                    b.Property<string>("Nome");

                    b.Property<string>("Telefone");

                    b.HasKey("Id");

                    b.HasIndex("CPF", "Email")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("TCCApi.CrudApi.Models.DTO.EmpresaDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cnpj")
                        .HasMaxLength(40);

                    b.Property<string>("NomeFantasia");

                    b.Property<string>("RazaoSocial");

                    b.HasKey("Id");

                    b.HasIndex("Cnpj")
                        .IsUnique();

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("TCCApi.CrudApi.Models.DTO.EventoDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataAtualizacao");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataEvento");

                    b.Property<DateTime>("DataFimInscricao");

                    b.Property<string>("Descricao");

                    b.Property<string>("DescricaoSimples");

                    b.Property<int?>("IdEmpresa");

                    b.Property<string>("Nome");

                    b.Property<string>("PublicoAlvo");

                    b.Property<double>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("TCCApi.CrudApi.Models.DTO.EventoTagDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("EventoDTOId");

                    b.Property<string>("TagName");

                    b.HasKey("Id");

                    b.HasIndex("EventoDTOId");

                    b.ToTable("EventoTagDTO");
                });

            modelBuilder.Entity("TCCApi.CrudApi.Models.DTO.FotoEventoDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CaminhoFoto");

                    b.Property<int>("IdEvento");

                    b.HasKey("Id");

                    b.HasIndex("IdEvento");

                    b.ToTable("FotoEventoDto");
                });

            modelBuilder.Entity("TCCApi.CrudApi.Models.DTO.LocalizacaoDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro");

                    b.Property<string>("Cep");

                    b.Property<string>("Cidade");

                    b.Property<string>("Complemento");

                    b.Property<int?>("EventoDTOId");

                    b.Property<string>("Logradouro");

                    b.Property<string>("Nome");

                    b.Property<string>("Numero");

                    b.Property<string>("UF");

                    b.HasKey("Id");

                    b.HasIndex("EventoDTOId");

                    b.ToTable("LocalizacaoDTO");
                });

            modelBuilder.Entity("TCCApi.CrudApi.Models.DTO.VendaDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodigoRegerencia");

                    b.Property<string>("CodigoTransacao");

                    b.Property<DateTime>("DataCancelamento");

                    b.Property<DateTime>("DataVenda");

                    b.Property<int?>("IdCLiente");

                    b.Property<int?>("IdEvento");

                    b.Property<string>("StatusVenda");

                    b.HasKey("Id");

                    b.HasIndex("IdCLiente");

                    b.HasIndex("IdEvento");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("TCCApi.CrudApi.Models.Localizacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro");

                    b.Property<string>("Cep");

                    b.Property<string>("Cidade");

                    b.Property<int?>("ClienteDTOId");

                    b.Property<string>("Complemento");

                    b.Property<string>("Logradouro");

                    b.Property<string>("Nome");

                    b.Property<string>("Numero");

                    b.Property<string>("UF");

                    b.HasKey("Id");

                    b.HasIndex("ClienteDTOId");

                    b.ToTable("Localizacao");
                });

            modelBuilder.Entity("TCCApi.CrudApi.Models.DTO.EventoDTO", b =>
                {
                    b.HasOne("TCCApi.CrudApi.Models.DTO.EmpresaDTO", "Empresa")
                        .WithMany("Eventos")
                        .HasForeignKey("IdEmpresa");
                });

            modelBuilder.Entity("TCCApi.CrudApi.Models.DTO.EventoTagDTO", b =>
                {
                    b.HasOne("TCCApi.CrudApi.Models.DTO.EventoDTO")
                        .WithMany("Tags")
                        .HasForeignKey("EventoDTOId");
                });

            modelBuilder.Entity("TCCApi.CrudApi.Models.DTO.FotoEventoDto", b =>
                {
                    b.HasOne("TCCApi.CrudApi.Models.DTO.EventoDTO", "Evento")
                        .WithMany("Fotos")
                        .HasForeignKey("IdEvento")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TCCApi.CrudApi.Models.DTO.LocalizacaoDTO", b =>
                {
                    b.HasOne("TCCApi.CrudApi.Models.DTO.EventoDTO")
                        .WithMany("Locais")
                        .HasForeignKey("EventoDTOId");
                });

            modelBuilder.Entity("TCCApi.CrudApi.Models.DTO.VendaDTO", b =>
                {
                    b.HasOne("TCCApi.CrudApi.Models.DTO.ClienteDTO", "Cliente")
                        .WithMany("Compras")
                        .HasForeignKey("IdCLiente");

                    b.HasOne("TCCApi.CrudApi.Models.DTO.EventoDTO", "Evento")
                        .WithMany()
                        .HasForeignKey("IdEvento");
                });

            modelBuilder.Entity("TCCApi.CrudApi.Models.Localizacao", b =>
                {
                    b.HasOne("TCCApi.CrudApi.Models.DTO.ClienteDTO")
                        .WithMany("Locais")
                        .HasForeignKey("ClienteDTOId");
                });
#pragma warning restore 612, 618
        }
    }
}
